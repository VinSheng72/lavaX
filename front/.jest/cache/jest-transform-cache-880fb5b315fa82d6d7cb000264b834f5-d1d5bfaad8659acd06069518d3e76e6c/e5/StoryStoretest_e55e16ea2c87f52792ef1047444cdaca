9ba2225a0156d5cf4a7f3c7449ef6515
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const StoryStore_1 = require("./StoryStore");
it("Story Modal", () => {
    const item = StoryStore_1.Chapter.create({
        title: "Chapter1",
        content: "nothing to be written here"
    });
    expect(item.content).toBe("nothing to be written here");
});
it("Category Modal", () => {
    const item = StoryStore_1.Category.create({
        type: "Action",
    });
    const item2 = StoryStore_1.Category.create({
        type: "Fiction",
    });
    const item3 = StoryStore_1.Category.create({
        type: "Non-Fiction",
    });
    expect(item.type).toBe("Action");
    expect(item2.type).toBe("Fiction");
    expect(item3.type).toBe("Non-Fiction");
});
it("Story", () => {
    const category = StoryStore_1.Category.create({ type: "Action" });
    const date = new Date();
    const chapter = StoryStore_1.Story.create({
        name: "Bear2",
        author: "Chan",
        createDate: date,
        chapter: [
            {
                title: "Chapter1",
                content: "nothing to be written here"
            },
            {
                title: "Chapter2",
                content: "nothing to be written"
            },
            {
                title: "Chapter3",
                content: "nothing to be"
            }
        ],
        category: category
    });
    expect(chapter.name).toBe("Bear2");
    expect(chapter.author).toBe("Chan");
    expect(chapter.createDate).toBe(date);
    expect(chapter.chapter).toBe([
        {
            title: "Chapter1",
            content: "nothing to be written here"
        },
        {
            title: "Chapter2",
            content: "nothing to be written"
        },
        {
            title: "Chapter3",
            content: "nothing to be"
        }
    ]);
    expect(chapter.category).toBe(category);
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXFVzZXJzXFxWaW5cXERlc2t0b3BcXGxhdmFYXFxmcm9udFxcc3JjXFxzdG9yZVxcU3RvcnlTdG9yZS50ZXN0LnRzIiwibWFwcGluZ3MiOiI7O0FBQUEsNkNBQXdEO0FBRXhELEVBQUUsQ0FBQyxhQUFhLEVBQUUsR0FBRyxFQUFFO0lBQ25CLE1BQU0sSUFBSSxHQUFHLG9CQUFPLENBQUMsTUFBTSxDQUFDO1FBQ3hCLEtBQUssRUFBRSxVQUFVO1FBQ2pCLE9BQU8sRUFBRSw0QkFBNEI7S0FDeEMsQ0FBQyxDQUFBO0lBRUYsTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxJQUFJLENBQUMsNEJBQTRCLENBQUMsQ0FBQTtBQUMzRCxDQUFDLENBQUMsQ0FBQTtBQUdGLEVBQUUsQ0FBQyxnQkFBZ0IsRUFBRSxHQUFHLEVBQUU7SUFDdEIsTUFBTSxJQUFJLEdBQUcscUJBQVEsQ0FBQyxNQUFNLENBQUM7UUFDekIsSUFBSSxFQUFFLFFBQVE7S0FDakIsQ0FBQyxDQUFBO0lBQ0YsTUFBTSxLQUFLLEdBQUcscUJBQVEsQ0FBQyxNQUFNLENBQUM7UUFDMUIsSUFBSSxFQUFFLFNBQVM7S0FDbEIsQ0FBQyxDQUFBO0lBQ0YsTUFBTSxLQUFLLEdBQUcscUJBQVEsQ0FBQyxNQUFNLENBQUM7UUFDMUIsSUFBSSxFQUFFLGFBQWE7S0FDdEIsQ0FBQyxDQUFBO0lBRUYsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUE7SUFDaEMsTUFBTSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUE7SUFDbEMsTUFBTSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUE7QUFDMUMsQ0FBQyxDQUFDLENBQUE7QUFHRixFQUFFLENBQUMsT0FBTyxFQUFFLEdBQUcsRUFBRTtJQUNiLE1BQU0sUUFBUSxHQUFHLHFCQUFRLENBQUMsTUFBTSxDQUFDLEVBQUUsSUFBSSxFQUFFLFFBQVEsRUFBRSxDQUFDLENBQUE7SUFDcEQsTUFBTSxJQUFJLEdBQUcsSUFBSSxJQUFJLEVBQUUsQ0FBQTtJQUN2QixNQUFNLE9BQU8sR0FBRyxrQkFBSyxDQUFDLE1BQU0sQ0FBQztRQUN6QixJQUFJLEVBQUUsT0FBTztRQUNiLE1BQU0sRUFBRSxNQUFNO1FBQ2QsVUFBVSxFQUFFLElBQUk7UUFDaEIsT0FBTyxFQUFFO1lBQ0w7Z0JBQ0ksS0FBSyxFQUFFLFVBQVU7Z0JBQ2pCLE9BQU8sRUFBRSw0QkFBNEI7YUFDeEM7WUFDRDtnQkFDSSxLQUFLLEVBQUUsVUFBVTtnQkFDakIsT0FBTyxFQUFFLHVCQUF1QjthQUNuQztZQUNEO2dCQUNJLEtBQUssRUFBRSxVQUFVO2dCQUNqQixPQUFPLEVBQUUsZUFBZTthQUMzQjtTQUNKO1FBQ0QsUUFBUSxFQUFFLFFBQVE7S0FDckIsQ0FBQyxDQUFBO0lBRUYsTUFBTSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUE7SUFDbEMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUE7SUFDbkMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUE7SUFDckMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQyxJQUFJLENBQUM7UUFDekI7WUFDSSxLQUFLLEVBQUUsVUFBVTtZQUNqQixPQUFPLEVBQUUsNEJBQTRCO1NBQ3hDO1FBQ0Q7WUFDSSxLQUFLLEVBQUUsVUFBVTtZQUNqQixPQUFPLEVBQUUsdUJBQXVCO1NBQ25DO1FBQ0Q7WUFDSSxLQUFLLEVBQUUsVUFBVTtZQUNqQixPQUFPLEVBQUUsZUFBZTtTQUMzQjtLQUNKLENBQUMsQ0FBQTtJQUNGLE1BQU0sQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFBO0FBQzNDLENBQUMsQ0FBQyxDQUFBIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVmluXFxEZXNrdG9wXFxsYXZhWFxcZnJvbnRcXHNyY1xcc3RvcmVcXFN0b3J5U3RvcmUudGVzdC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTdG9yeSwgQ2hhcHRlciwgQ2F0ZWdvcnkgfSBmcm9tIFwiLi9TdG9yeVN0b3JlXCI7XHJcblxyXG5pdChcIlN0b3J5IE1vZGFsXCIsICgpID0+IHtcclxuICAgIGNvbnN0IGl0ZW0gPSBDaGFwdGVyLmNyZWF0ZSh7XHJcbiAgICAgICAgdGl0bGU6IFwiQ2hhcHRlcjFcIixcclxuICAgICAgICBjb250ZW50OiBcIm5vdGhpbmcgdG8gYmUgd3JpdHRlbiBoZXJlXCJcclxuICAgIH0pXHJcblxyXG4gICAgZXhwZWN0KGl0ZW0uY29udGVudCkudG9CZShcIm5vdGhpbmcgdG8gYmUgd3JpdHRlbiBoZXJlXCIpXHJcbn0pXHJcblxyXG5cclxuaXQoXCJDYXRlZ29yeSBNb2RhbFwiLCAoKSA9PiB7XHJcbiAgICBjb25zdCBpdGVtID0gQ2F0ZWdvcnkuY3JlYXRlKHtcclxuICAgICAgICB0eXBlOiBcIkFjdGlvblwiLFxyXG4gICAgfSlcclxuICAgIGNvbnN0IGl0ZW0yID0gQ2F0ZWdvcnkuY3JlYXRlKHtcclxuICAgICAgICB0eXBlOiBcIkZpY3Rpb25cIixcclxuICAgIH0pXHJcbiAgICBjb25zdCBpdGVtMyA9IENhdGVnb3J5LmNyZWF0ZSh7XHJcbiAgICAgICAgdHlwZTogXCJOb24tRmljdGlvblwiLFxyXG4gICAgfSlcclxuXHJcbiAgICBleHBlY3QoaXRlbS50eXBlKS50b0JlKFwiQWN0aW9uXCIpXHJcbiAgICBleHBlY3QoaXRlbTIudHlwZSkudG9CZShcIkZpY3Rpb25cIilcclxuICAgIGV4cGVjdChpdGVtMy50eXBlKS50b0JlKFwiTm9uLUZpY3Rpb25cIilcclxufSlcclxuXHJcblxyXG5pdChcIlN0b3J5XCIsICgpID0+IHtcclxuICAgIGNvbnN0IGNhdGVnb3J5ID0gQ2F0ZWdvcnkuY3JlYXRlKHsgdHlwZTogXCJBY3Rpb25cIiB9KVxyXG4gICAgY29uc3QgZGF0ZSA9IG5ldyBEYXRlKClcclxuICAgIGNvbnN0IGNoYXB0ZXIgPSBTdG9yeS5jcmVhdGUoe1xyXG4gICAgICAgIG5hbWU6IFwiQmVhcjJcIixcclxuICAgICAgICBhdXRob3I6IFwiQ2hhblwiLFxyXG4gICAgICAgIGNyZWF0ZURhdGU6IGRhdGUsXHJcbiAgICAgICAgY2hhcHRlcjogW1xyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICB0aXRsZTogXCJDaGFwdGVyMVwiLFxyXG4gICAgICAgICAgICAgICAgY29udGVudDogXCJub3RoaW5nIHRvIGJlIHdyaXR0ZW4gaGVyZVwiXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIHRpdGxlOiBcIkNoYXB0ZXIyXCIsXHJcbiAgICAgICAgICAgICAgICBjb250ZW50OiBcIm5vdGhpbmcgdG8gYmUgd3JpdHRlblwiXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIHRpdGxlOiBcIkNoYXB0ZXIzXCIsXHJcbiAgICAgICAgICAgICAgICBjb250ZW50OiBcIm5vdGhpbmcgdG8gYmVcIlxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgXSxcclxuICAgICAgICBjYXRlZ29yeTogY2F0ZWdvcnlcclxuICAgIH0pXHJcblxyXG4gICAgZXhwZWN0KGNoYXB0ZXIubmFtZSkudG9CZShcIkJlYXIyXCIpXHJcbiAgICBleHBlY3QoY2hhcHRlci5hdXRob3IpLnRvQmUoXCJDaGFuXCIpXHJcbiAgICBleHBlY3QoY2hhcHRlci5jcmVhdGVEYXRlKS50b0JlKGRhdGUpXHJcbiAgICBleHBlY3QoY2hhcHRlci5jaGFwdGVyKS50b0JlKFtcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIHRpdGxlOiBcIkNoYXB0ZXIxXCIsXHJcbiAgICAgICAgICAgIGNvbnRlbnQ6IFwibm90aGluZyB0byBiZSB3cml0dGVuIGhlcmVcIlxyXG4gICAgICAgIH0sXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICB0aXRsZTogXCJDaGFwdGVyMlwiLFxyXG4gICAgICAgICAgICBjb250ZW50OiBcIm5vdGhpbmcgdG8gYmUgd3JpdHRlblwiXHJcbiAgICAgICAgfSxcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIHRpdGxlOiBcIkNoYXB0ZXIzXCIsXHJcbiAgICAgICAgICAgIGNvbnRlbnQ6IFwibm90aGluZyB0byBiZVwiXHJcbiAgICAgICAgfVxyXG4gICAgXSlcclxuICAgIGV4cGVjdChjaGFwdGVyLmNhdGVnb3J5KS50b0JlKGNhdGVnb3J5KVxyXG59KSJdLCJ2ZXJzaW9uIjozfQ==