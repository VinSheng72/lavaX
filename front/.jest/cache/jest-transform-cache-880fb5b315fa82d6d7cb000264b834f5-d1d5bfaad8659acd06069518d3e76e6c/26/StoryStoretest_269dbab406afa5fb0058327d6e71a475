46af117c3c145247153e4e95384be2c8
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const StoryStore_1 = require("./StoryStore");
it("Story Modal", () => {
    const item = StoryStore_1.Chapter.create({
        title: "Chapter1",
        content: "nothing to be written here"
    });
    expect(item.content).toBe("nothing to be written here");
});
// it("Category Model", () => {
//     const item = Category.create({
//         type: "Action",
//     })
//     const item2 = Category.create({
//         type: "Fiction",
//     })
//     const item3 = Category.create({
//         type: "Non-Fiction",
//     })
//     expect(item.type).toBe("Action")
//     expect(item2.type).toBe("Fiction")
//     expect(item3.type).toBe("Non-Fiction")
// })
it("Story Model", () => {
    let chapterList = [];
    chapterList.push(StoryStore_1.Chapter.create({ title: "Chapter1", content: "nothing to be written here" }));
    const date = new Date();
    const story = StoryStore_1.StoryModel.create({
        name: "Bear2",
        createDate: date,
        chapters: chapterList,
        category: "Action"
    });
    expect(story.name).toBe("Bear2");
    expect(story.createDate).toBe(date);
    expect(story.chapters).toStrictEqual([
        {
            title: "Chapter1",
            content: "nothing to be written here"
        }
    ]);
    expect(story.category).toBe("Action");
});
it("add new story model", () => {
    const list = StoryStore_1.HomeStoryStore.create();
    list.addStory(StoryStore_1.StoryModel.create({
        name: "Book1",
        createDate: new Date,
        chapters: [{
                title: "Chapter1",
                content: "good morning"
            }],
        category: "Action"
    }));
    expect(list.stories.length).toBe(1);
    expect(list.stories[0].name).toBe("Book1");
    expect(list.stories[0].chapters[0]).toStrictEqual({
        title: "Chapter1",
        content: "good morning"
    });
    expect(list.stories[0].category).toBe("Action");
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXFVzZXJzXFxWaW5cXERlc2t0b3BcXGxhdmFYXFxmcm9udFxcc3JjXFxzdG9yZVxcU3RvcnlTdG9yZS50ZXN0LnRzIiwibWFwcGluZ3MiOiI7O0FBQUEsNkNBQW1FO0FBRW5FLEVBQUUsQ0FBQyxhQUFhLEVBQUUsR0FBRyxFQUFFO0lBQ25CLE1BQU0sSUFBSSxHQUFHLG9CQUFPLENBQUMsTUFBTSxDQUFDO1FBQ3hCLEtBQUssRUFBRSxVQUFVO1FBQ2pCLE9BQU8sRUFBRSw0QkFBNEI7S0FDeEMsQ0FBQyxDQUFBO0lBRUYsTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxJQUFJLENBQUMsNEJBQTRCLENBQUMsQ0FBQTtBQUMzRCxDQUFDLENBQUMsQ0FBQTtBQUdGLCtCQUErQjtBQUMvQixxQ0FBcUM7QUFDckMsMEJBQTBCO0FBQzFCLFNBQVM7QUFDVCxzQ0FBc0M7QUFDdEMsMkJBQTJCO0FBQzNCLFNBQVM7QUFDVCxzQ0FBc0M7QUFDdEMsK0JBQStCO0FBQy9CLFNBQVM7QUFFVCx1Q0FBdUM7QUFDdkMseUNBQXlDO0FBQ3pDLDZDQUE2QztBQUM3QyxLQUFLO0FBR0wsRUFBRSxDQUFDLGFBQWEsRUFBRSxHQUFHLEVBQUU7SUFDbkIsSUFBSSxXQUFXLEdBQUcsRUFBRSxDQUFBO0lBQ3BCLFdBQVcsQ0FBQyxJQUFJLENBQUMsb0JBQU8sQ0FBQyxNQUFNLENBQUMsRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLE9BQU8sRUFBRSw0QkFBNEIsRUFBRSxDQUFDLENBQUMsQ0FBQTtJQUM5RixNQUFNLElBQUksR0FBRyxJQUFJLElBQUksRUFBRSxDQUFBO0lBQ3ZCLE1BQU0sS0FBSyxHQUFHLHVCQUFVLENBQUMsTUFBTSxDQUFDO1FBQzVCLElBQUksRUFBRSxPQUFPO1FBQ2IsVUFBVSxFQUFFLElBQUk7UUFDaEIsUUFBUSxFQUFFLFdBQVc7UUFDckIsUUFBUSxFQUFFLFFBQVE7S0FDckIsQ0FBQyxDQUFBO0lBRUYsTUFBTSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUE7SUFDaEMsTUFBTSxDQUFDLEtBQUssQ0FBQyxVQUFVLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUE7SUFDbkMsTUFBTSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBQyxhQUFhLENBQUM7UUFDakM7WUFDSSxLQUFLLEVBQUUsVUFBVTtZQUNqQixPQUFPLEVBQUUsNEJBQTRCO1NBQ3hDO0tBQ0osQ0FBQyxDQUFBO0lBQ0YsTUFBTSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUE7QUFDekMsQ0FBQyxDQUFDLENBQUE7QUFFRixFQUFFLENBQUMscUJBQXFCLEVBQUUsR0FBRyxFQUFFO0lBQzNCLE1BQU0sSUFBSSxHQUFHLDJCQUFjLENBQUMsTUFBTSxFQUFFLENBQUE7SUFDcEMsSUFBSSxDQUFDLFFBQVEsQ0FBQyx1QkFBVSxDQUFDLE1BQU0sQ0FBQztRQUM1QixJQUFJLEVBQUUsT0FBTztRQUNiLFVBQVUsRUFBRSxJQUFJLElBQUk7UUFDcEIsUUFBUSxFQUFFLENBQUM7Z0JBQ1AsS0FBSyxFQUFFLFVBQVU7Z0JBQ2pCLE9BQU8sRUFBRSxjQUFjO2FBQzFCLENBQUM7UUFDRixRQUFRLEVBQUUsUUFBUTtLQUNyQixDQUFDLENBQUMsQ0FBQTtJQUVILE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQTtJQUNuQyxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUE7SUFDMUMsTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsYUFBYSxDQUFDO1FBQzlDLEtBQUssRUFBRSxVQUFVO1FBQ2pCLE9BQU8sRUFBRSxjQUFjO0tBQzFCLENBQUMsQ0FBQTtJQUNGLE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQTtBQUNuRCxDQUFDLENBQUMsQ0FBQSIsIm5hbWVzIjpbXSwic291cmNlcyI6WyJDOlxcVXNlcnNcXFZpblxcRGVza3RvcFxcbGF2YVhcXGZyb250XFxzcmNcXHN0b3JlXFxTdG9yeVN0b3JlLnRlc3QudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU3RvcnlNb2RlbCwgQ2hhcHRlciwgSG9tZVN0b3J5U3RvcmUgfSBmcm9tIFwiLi9TdG9yeVN0b3JlXCI7XHJcblxyXG5pdChcIlN0b3J5IE1vZGFsXCIsICgpID0+IHtcclxuICAgIGNvbnN0IGl0ZW0gPSBDaGFwdGVyLmNyZWF0ZSh7XHJcbiAgICAgICAgdGl0bGU6IFwiQ2hhcHRlcjFcIixcclxuICAgICAgICBjb250ZW50OiBcIm5vdGhpbmcgdG8gYmUgd3JpdHRlbiBoZXJlXCJcclxuICAgIH0pXHJcblxyXG4gICAgZXhwZWN0KGl0ZW0uY29udGVudCkudG9CZShcIm5vdGhpbmcgdG8gYmUgd3JpdHRlbiBoZXJlXCIpXHJcbn0pXHJcblxyXG5cclxuLy8gaXQoXCJDYXRlZ29yeSBNb2RlbFwiLCAoKSA9PiB7XHJcbi8vICAgICBjb25zdCBpdGVtID0gQ2F0ZWdvcnkuY3JlYXRlKHtcclxuLy8gICAgICAgICB0eXBlOiBcIkFjdGlvblwiLFxyXG4vLyAgICAgfSlcclxuLy8gICAgIGNvbnN0IGl0ZW0yID0gQ2F0ZWdvcnkuY3JlYXRlKHtcclxuLy8gICAgICAgICB0eXBlOiBcIkZpY3Rpb25cIixcclxuLy8gICAgIH0pXHJcbi8vICAgICBjb25zdCBpdGVtMyA9IENhdGVnb3J5LmNyZWF0ZSh7XHJcbi8vICAgICAgICAgdHlwZTogXCJOb24tRmljdGlvblwiLFxyXG4vLyAgICAgfSlcclxuXHJcbi8vICAgICBleHBlY3QoaXRlbS50eXBlKS50b0JlKFwiQWN0aW9uXCIpXHJcbi8vICAgICBleHBlY3QoaXRlbTIudHlwZSkudG9CZShcIkZpY3Rpb25cIilcclxuLy8gICAgIGV4cGVjdChpdGVtMy50eXBlKS50b0JlKFwiTm9uLUZpY3Rpb25cIilcclxuLy8gfSlcclxuXHJcblxyXG5pdChcIlN0b3J5IE1vZGVsXCIsICgpID0+IHtcclxuICAgIGxldCBjaGFwdGVyTGlzdCA9IFtdXHJcbiAgICBjaGFwdGVyTGlzdC5wdXNoKENoYXB0ZXIuY3JlYXRlKHsgdGl0bGU6IFwiQ2hhcHRlcjFcIiwgY29udGVudDogXCJub3RoaW5nIHRvIGJlIHdyaXR0ZW4gaGVyZVwiIH0pKVxyXG4gICAgY29uc3QgZGF0ZSA9IG5ldyBEYXRlKClcclxuICAgIGNvbnN0IHN0b3J5ID0gU3RvcnlNb2RlbC5jcmVhdGUoe1xyXG4gICAgICAgIG5hbWU6IFwiQmVhcjJcIixcclxuICAgICAgICBjcmVhdGVEYXRlOiBkYXRlLFxyXG4gICAgICAgIGNoYXB0ZXJzOiBjaGFwdGVyTGlzdCxcclxuICAgICAgICBjYXRlZ29yeTogXCJBY3Rpb25cIlxyXG4gICAgfSlcclxuXHJcbiAgICBleHBlY3Qoc3RvcnkubmFtZSkudG9CZShcIkJlYXIyXCIpXHJcbiAgICBleHBlY3Qoc3RvcnkuY3JlYXRlRGF0ZSkudG9CZShkYXRlKVxyXG4gICAgZXhwZWN0KHN0b3J5LmNoYXB0ZXJzKS50b1N0cmljdEVxdWFsKFtcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIHRpdGxlOiBcIkNoYXB0ZXIxXCIsXHJcbiAgICAgICAgICAgIGNvbnRlbnQ6IFwibm90aGluZyB0byBiZSB3cml0dGVuIGhlcmVcIlxyXG4gICAgICAgIH1cclxuICAgIF0pXHJcbiAgICBleHBlY3Qoc3RvcnkuY2F0ZWdvcnkpLnRvQmUoXCJBY3Rpb25cIilcclxufSlcclxuXHJcbml0KFwiYWRkIG5ldyBzdG9yeSBtb2RlbFwiLCAoKSA9PiB7XHJcbiAgICBjb25zdCBsaXN0ID0gSG9tZVN0b3J5U3RvcmUuY3JlYXRlKClcclxuICAgIGxpc3QuYWRkU3RvcnkoU3RvcnlNb2RlbC5jcmVhdGUoe1xyXG4gICAgICAgIG5hbWU6IFwiQm9vazFcIixcclxuICAgICAgICBjcmVhdGVEYXRlOiBuZXcgRGF0ZSxcclxuICAgICAgICBjaGFwdGVyczogW3tcclxuICAgICAgICAgICAgdGl0bGU6IFwiQ2hhcHRlcjFcIixcclxuICAgICAgICAgICAgY29udGVudDogXCJnb29kIG1vcm5pbmdcIlxyXG4gICAgICAgIH1dLFxyXG4gICAgICAgIGNhdGVnb3J5OiBcIkFjdGlvblwiXHJcbiAgICB9KSlcclxuXHJcbiAgICBleHBlY3QobGlzdC5zdG9yaWVzLmxlbmd0aCkudG9CZSgxKVxyXG4gICAgZXhwZWN0KGxpc3Quc3Rvcmllc1swXS5uYW1lKS50b0JlKFwiQm9vazFcIilcclxuICAgIGV4cGVjdChsaXN0LnN0b3JpZXNbMF0uY2hhcHRlcnNbMF0pLnRvU3RyaWN0RXF1YWwoe1xyXG4gICAgICAgIHRpdGxlOiBcIkNoYXB0ZXIxXCIsXHJcbiAgICAgICAgY29udGVudDogXCJnb29kIG1vcm5pbmdcIlxyXG4gICAgfSlcclxuICAgIGV4cGVjdChsaXN0LnN0b3JpZXNbMF0uY2F0ZWdvcnkpLnRvQmUoXCJBY3Rpb25cIilcclxufSkiXSwidmVyc2lvbiI6M30=